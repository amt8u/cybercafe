{"version":3,"sources":["components/Option.jsx","components/OptionsList.jsx","Bottom.jsx","Center.jsx","components/GameResult.jsx","components/GameStart.jsx","components/Score.jsx","components/Timer.jsx","components/Sound.jsx","components/Chance.jsx","Top.jsx","constants.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["Option","props","className","onClick","value","OptionsList","options","map","opt","id","name","Bottom","Center","inputs","operator","GameResult","score","GameStart","Score","Timer","timerClass","time","Sound","title","enabled","setSound","Chance","count","Top","inCorrectCount","timer","sound","OPERATORS","getRandomNumber","min","max","Math","floor","random","addRandomNumber","set","start","end","rndNum","has","add","generateRandomOption","result","generateOptions","num","optionSet","Set","size","array","i","length","j","shuffleArray","App","useState","gameState","setGameState","correctCount","setCorrectCount","setInCorrectCount","setInputs","setOperator","setOptions","setResult","remainingTime","setRemainingTime","remainingTimeRef","useRef","intervalRef","updateState","newState","current","loadQuestion","currentOperator","currentInputs","generateInputs","fn","x","y","arr","evaluateExpression","endGame","clearInterval","onClickStart","playClickSound","gameTimerId","setInterval","initGame","Audio","play","Fragment","e","currentInCorrectCount","Number","currentTarget","innerHTML","onOptionClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6a2e5c2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./option.css\";\n\nfunction Option(props) {\n    return (\n        <div className=\"option-wrapper\">\n            {/* <input class=\"option\" type=\"radio\" id={props.id} name={props.id} value={props.value}></input>\n            <label for={props.id}>{props.value}</label> */}\n            <div onClick={props.onClick} className=\"option\">{props.value}</div>\n        </div>\n    );\n}\n\nexport default Option;","import React from \"react\";\nimport Option from \"./Option\";\n\nfunction OptionsList(props) {\n    return props.options.map(opt => (\n        <Option value={opt} id={opt} name={opt} onClick={props.onClick}/>\n    ));\n}\n\nexport default OptionsList;","import React from \"react\";\nimport OptionsList from \"./components/OptionsList\";\nimport \"./bottom.css\";\n\nfunction Bottom(props) {\n    return (\n        <div className=\"bottom-wrapper\">\n            <OptionsList options={props.options} onClick={props.onClick}/>\n        </div>\n    );\n}\n\nexport default Bottom;","import React from \"react\";\nimport \"./center.css\"\n\nfunction Center(props) {\n    return (\n        <div className=\"center-wrapper\">\n            <div className=\"center\">\n                {/* {props.inputs.map(inp => <div className=\"token\">{inp}</div>)} */}\n                <div className=\"token\">{props.inputs[0]}</div>\n                <div className=\"token\">{props.operator}</div>\n                <div className=\"token\">{props.inputs[1]}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Center;","import React from \"react\";\nimport \"./game-result.css\";\n// import Top from \"./../Top\";\n\nexport default function GameResult(props) {\n    return (\n        <div>            \n            {/* <Top score={props.score} timer={props.timer}/> */}\n            <div className=\"result-wrapper\">\n                <div className=\"play-again\" onClick={props.onClick}>Play again</div>\n                <div className=\"result-header\">Game Over</div>\n                <div className=\"result-score\">{props.score}</div>\n                <div className=\"result-score subtitle\">Score</div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./game-start.css\"\n// import Top from \"./../Top\";\n\nexport default function GameStart(props) {\n    return (\n        <div>\n            {/* <Top /> */}\n            <div className=\"start-wrapper\">\n                <div className=\"start-header\">Ready for challenge?</div>\n                <div className=\"start-button\" onClick={props.onClick}>Start</div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./score.css\";\n\nfunction Score(props) {\n    return (\n        <div className=\"score-wrapper\">\n            <div className=\"score\">\n                {props.value}\n            </div>\n        </div>\n    );\n}\n\nexport default Score;","import React from \"react\";\nimport \"./timer.css\";\n\nfunction Timer(props) {\n    let timerClass = \"timer-value\";\n    timerClass += props.time <= 10 ? \" timer-critical\" : \" timer-low\";\n    return (\n        <div className=\"timer-wrapper\">\n            <div className=\"timer\">\n                Time : <span className={timerClass}>{props.time}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Timer;","import React from \"react\";\nimport \"./sound.css\";\n\nfunction Sound(props) {\n    return (\n        <div title={`Sound ${props.enabled ? \"Off\" : \"On\"}`} className=\"sound-wrapper\">\n            <div className={props.enabled ? \"on\" : \"off\"} onClick={() => props.setSound(props.enabled ? false : true)}>                \n            </div>\n        </div>\n    );\n}\n\nexport default Sound;","import React from \"react\";\nimport \"./chance.css\";\n\nfunction Chance(props) {\n    return (\n        <div className=\"timer-wrapper\">\n            <div className=\"timer\">\n                Wrong : <span className=\"timer-value chance\">{props.count} / 3</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Chance;","import React from \"react\";\nimport Score from \"./components/Score\";\nimport Timer from \"./components/Timer\";\nimport Sound from \"./components/Sound\";\nimport Chance from \"./components/Chance\";\nimport \"./top.css\";\n\nfunction Top(props) {\n    return (\n        <div className=\"top-wrapper\">\n            <Score value={props.score}/>\n            <Chance count={props.inCorrectCount}/>\n            <Timer time={props.timer}/>\n            <Sound enabled={props.sound} {...props}/>\n        </div>\n    );\n}\n\nexport default Top;","export const OPERATORS = {\n    \"0\" : \"+\",\n    \"1\" : \"-\",\n    \"2\" : \"*\",\n    \"3\" : \"/\"\n};","import { OPERATORS } from \"./constants\";\n\nfunction getRandomNumber(min, max) {\n    // return parseInt(Math.random() * (end - start) + start); \n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction addRandomNumber(set, start, end) {\n    if (typeof start !== \"number\" || typeof end !== \"number\") {\n        return set;\n    }\n    let rndNum = getRandomNumber(start, end);\n    if (set.has(rndNum)) {\n        addRandomNumber(set, start, end);\n    } else {\n        set.add(rndNum);\n    }\n    return set;\n}\nfunction generateInputs(num, start, end) {\n    let set = new Set();\n    if (end - start <= num) {\n        return set;\n    }\n    while (set.size !== num) {\n        addRandomNumber(set, start, end);\n    }\n    return set;\n}\nfunction generateRandomOperator(level) {\n    return OPERATORS[getRandomNumber(0, level)];\n}\nfunction evaluateExpression(inputs, operator) {\n    let fn;\n    let add = (x,y) => x + y;\n    let sub = (x,y) => x - y;\n    let mul = (x,y) => x * y;\n    let div = (x,y) => x / y;\n    switch (operator) {\n        case \"+\":\n            fn = add;\n            break;\n        case \"-\":\n            fn = sub;\n            break;\n        case \"*\":\n            fn = mul;\n            break;\n        case \"/\":\n            fn = div;\n            break;\n        default:\n            fn = add;\n\n    }\n    let arr = [...inputs];\n    return fn(arr[0], arr[1]);\n}\nfunction generateRandomOption(set, result) {\n    set.add(result + getRandomNumber(result - 5, result + 5));\n    return set;\n}\nfunction generateOptions(num, result) {\n    let optionSet = new Set([result]);\n    // Add static value\n    optionSet.add(result + 10);\n    // Add more random numbers\n    while(optionSet.size < num) {\n        generateRandomOption(optionSet, result);\n    }\n\n    return shuffleArray([...optionSet]);\n}\n\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nexport {\n    getRandomNumber,\n    addRandomNumber,\n    generateInputs,\n    generateRandomOperator,\n    evaluateExpression,\n    generateOptions\n}\n\n","import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Bottom from \"./Bottom\";\nimport Center from \"./Center\";\nimport GameResult from \"./components/GameResult\";\nimport GameStart from \"./components/GameStart\";\nimport Top from \"./Top\";\nimport {\n  evaluateExpression, generateInputs,\n  generateOptions, generateRandomOperator\n} from \"./utils\";\n\nfunction App() {\n  const INPUT_START = 1;\n  const INPUT_END = 20;\n  const INPUTS_COUNT = 2;\n  const OPTIONS_COUNT = 4;\n  const DIFFICULTY_LEVEL = 1;\n  const TIMER_DURATION = 30;\n\n  const [gameState, setGameState] = useState(0);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [inCorrectCount, setInCorrectCount] = useState(0);\n  const [inputs, setInputs] = useState([]);\n  const [operator, setOperator] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState(null);\n  const [sound, setSound] = useState(true);\n  const [remainingTime, setRemainingTime] = useState(TIMER_DURATION);\n  const remainingTimeRef = useRef(remainingTime);\n  const intervalRef = useRef();\n\n  function updateState(newState) {\n    remainingTimeRef.current = newState;\n    setRemainingTime(newState);\n  }\n\n  const loadQuestion = () => {\n    let currentOperator = generateRandomOperator(DIFFICULTY_LEVEL);\n    setOperator(currentOperator);\n    let currentInputs = generateInputs(INPUTS_COUNT, INPUT_START, INPUT_END);\n    setInputs(currentInputs);\n    let result = evaluateExpression(currentInputs, currentOperator);\n    setResult(result);\n    setOptions(generateOptions(OPTIONS_COUNT, result));\n  };\n\n  const endGame = () => {\n    clearInterval(intervalRef.current);\n    setGameState(2);\n  };\n\n  const initGame = () => {\n    // Set 60 seconds\n    updateState(TIMER_DURATION);\n    // main game timer\n    const gameTimerId = setInterval(() => {\n      if (remainingTimeRef.current <= 1) {\n        updateState(remainingTimeRef.current - 1);\n        endGame();\n        // clearInterval(intervalRef.current);\n      } else {\n        updateState(remainingTimeRef.current - 1);\n      }\n    }, 1000);\n    intervalRef.current = gameTimerId;\n    loadQuestion();\n  };\n\n  const onClickStart = () => {\n    setCorrectCount(0);\n    setInCorrectCount(0);\n    setGameState(1);\n    playClickSound();\n    initGame();\n  };\n\n  const onOptionClick = (e) => {\n    let currentInCorrectCount = inCorrectCount + 1;\n    if ( currentInCorrectCount >= 3) {\n      setInCorrectCount(currentInCorrectCount);\n      endGame();\n    } else if (Number(e.currentTarget.innerHTML) === result) {\n      setCorrectCount(correctCount + 1);\n    } else {\n      setInCorrectCount(currentInCorrectCount);\n    }\n    playClickSound();\n    loadQuestion();\n  };\n\n  const playClickSound = () => {\n    // play click sound\n    if (sound) {\n      new Audio(\"click.mp3\").play();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Running */}\n      {gameState === 1 && (\n        <React.Fragment>\n          <Top\n            score={correctCount}\n            inCorrectCount={inCorrectCount}\n            timer={remainingTime}\n            sound={sound}\n            setSound={setSound}\n          />\n          <Center inputs={[...inputs]} operator={operator} />\n          <Bottom options={[...options]} onClick={(e) => onOptionClick(e)} />\n        </React.Fragment>\n      )}\n      {/* Result */}\n      {gameState === 2 && (\n        <React.Fragment>\n          <Top\n            score={correctCount}\n            inCorrectCount={inCorrectCount}\n            timer={remainingTime}\n            sound={sound}\n            setSound={setSound}\n          />\n          <GameResult\n            score={correctCount}\n            timer={remainingTime}\n            onClick={() => onClickStart()}\n          ></GameResult>\n        </React.Fragment>\n      )}\n      {/* Start */}\n      {gameState === 0 && (\n        <React.Fragment>\n          <Top\n            score={correctCount}\n            inCorrectCount={inCorrectCount}\n            timer={remainingTime}\n            sound={sound}\n            setSound={setSound}\n          />\n          <GameStart onClick={() => onClickStart()}></GameStart>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}